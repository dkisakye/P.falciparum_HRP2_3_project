size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
pie_3
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5, width = 0.5)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5, size = 0.2)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.2) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
pie_3
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, size = 0.3, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
pie_3
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, size = 0.2, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
pie_3
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR) +
geom_text_repel(data = df_Sp_PCR, aes(y = ypos, size = 0.2, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
pie_3
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)
pie_3
# Calculate positions for labels outside the pie chart
label_positions <- df_Sp_PCR$ypos
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)
pie_3
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 3, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5,
data = df_Sp_PCR) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)+
+
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")), size = 3)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_text_repel(aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 3, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5,
data = df_Sp_PCR) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)+
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")), size = 3)
pie_3
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
# geom_text_repel(aes(y = ypos, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
# size = 3, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5,
# data = df_Sp_PCR) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR)+
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")), size = 3)
pie_3
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Calculate label positions
df_Sp_PCR <- df_Sp_PCR %>%
arrange(desc(Category)) %>%
mutate(ypos = cumsum(proportion) - 0.5 * proportion)
# Calculate positions for labels outside the pie chart
label_positions <- df_Sp_PCR$ypos
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 3, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.3, nudge_y = 0.3) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.3, nudge_y = 0.1) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.5, nudge_y = 0.1) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
# Save pie chart with white background
ggsave("../../figures/Pie_3.png", pie_3, width = 6, height = 4, dpi = 300)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 1.2, nudge_y = 0.1) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.1) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.8, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.7, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 2.0, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.9, yend = ypos), color = "black", size = 0.5, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.9, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
## Save pie 3
ggsave("../../figures/Pie_3.pdf", pie_3, width = 6, height = 4, dpi = 300)
# Calculate label positions
df_Sp_PCR <- df_Sp_PCR %>%
arrange(desc(Category)) %>%
mutate(ypos = cumsum(proportion) - 0.5 * proportion)
# Calculate positions for labels outside the pie chart
label_positions <- df_Sp_PCR$ypos
# Creating the pie chart
pie_3 <- ggplot(df_Sp_PCR, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Species PCR result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = length(unique(df_Sp_PCR$Category)), name = "Blues"))) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
geom_segment(aes(x = 1.5, y = ypos, xend = 1.9, yend = ypos), color = "black", size = 0.3, data = df_Sp_PCR) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
# Display the plot
print(pie_3)
pie_2 <- ggplot(df_digital_PCR_2, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Digital PCR Result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = pink_shades) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
# geom_text_repel(aes(label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
# size = 3, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
geom_segment(aes(x = 1.5, y = ypos, xend = 1.9, yend = ypos), color = "black", size = 0.3, data = df_digital_PCR_2) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
pie_2
# Calculate label positions
df_digital_PCR_2 <- df_digital_PCR_2 %>%
arrange(desc(Category)) %>%
mutate(ypos = cumsum(proportion) - 0.5 * proportion)
# Calculate positions for labels outside the pie chart
label_positions <- df_digital_PCR_2R$ypos
# Calculate positions for labels outside the pie chart
label_positions <- df_digital_PCR_2$ypos
pie_2 <- ggplot(df_digital_PCR_2, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "Digital PCR Result") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = pink_shades) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA)) +
# geom_text_repel(aes(label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
# size = 3, nudge_x = 1.2, direction = "y", hjust = 0, box.padding = 0.5)
geom_segment(aes(x = 1.5, y = ypos, xend = 1.9, yend = ypos), color = "black", size = 0.3, data = df_digital_PCR_2) +
geom_text(aes(x = 1.8, y = label_positions, label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
size = 2.5, nudge_x = 0.2, nudge_y = 0.2) # Adjust nudge_x and nudge_y here
pie_2
# Save pie chart
ggsave("../../figures/Pie_2_outside_labels.pdf", pie_2, width = 6, height = 4, dpi = 300)
# Filter to keep only those with values for counts
df_digital_PCR_2 <- df_digital_PCR %>%
filter(!counts == 0)
plot_2<-ggplot(df_digital_PCR_2, aes(x = Category, y = proportion, fill = Category)) +
geom_bar(stat = "identity", color = "black", size = 0.5) +
labs(y = "Proportion (%)") +
theme_classic() +
scale_fill_manual(values = pink_shades)+
#scale_fill_manual(values = rev(blues9)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position = "none") +
geom_text(aes(label = paste0(round(proportion, 1), "%")), vjust = -0.5, size = 3)+
xlab(NULL)
plot_2 <- plot_2 + theme(panel.background = element_blank(), plot.background = element_blank())
plot_2
# Save the plot as a high-resolution image
ggsave("../../figures/plot_2_concise.pdf", plot_2, width = 6, height = 4, dpi = 300)
plot_2_stacked <- ggplot(df_digital_PCR_2, aes(x = "n = 90", y = proportion, fill = Category)) +
geom_bar(stat = "identity", color = "black", size = 0.5) +
labs(y = "Proportion (%)", fill = "Digital PCR Result") +  # Include legend title
theme_classic() +
scale_fill_manual(values = pink_shades) +
theme(axis.text.x = element_text(hjust = 1),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA)) +  # Include the legend
#geom_text(aes(label = paste0(round(proportion, 1), "%")), position = position_stack(vjust = 0.5), size = 3, color = "white") +
xlab(NULL)
plot_2_stacked
plot_2_stacked <- ggplot(df_digital_PCR_2, aes(x = "n = 90", y = proportion, fill = Category)) +
geom_bar(stat = "identity", color = "black", size = 0.5) +
labs(y = "Proportion (%)", fill = "Digital PCR Result") +  # Include legend title
theme_classic() +
scale_fill_manual(values = pink_shades) +
theme(axis.text.x = element_text(hjust = 1),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA)) +  # Include the legend
#geom_text(aes(label = paste0(round(proportion, 1), "%")), position = position_stack(vjust = 0.5), size = 3, color = "white") +
xlab(NULL)
plot_2_stacked
### Save stacked bar graph
ggsave("../../figures/plot_2_stacked_concise.pdf", plot_2_stacked, width = 6, height = 4, dpi = 300)
pie_1 <- ggplot(df_varATS, aes(x = "", y = proportion, fill = Category)) +
geom_bar(stat = "identity", width = 1, color = "black", size = 0.5) +
labs(fill = "varATS Result") +
geom_text(aes(label = paste0(round(proportion, 1), "%", " (n=", counts, ")")),
position = position_stack(vjust = 0.6), size = 3, color = "white") +
coord_polar(theta = "y", start = 0) +
theme_void() +
scale_fill_manual(values = c("#08519c", "#2b8cbe", "#c51b8a"),
labels = c("varATS -",
"varATS + (\u2264 1 p/µL)", # Unicode for "≤"
"varATS + (> 1 p/µL)")) +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA))
pie_1
# Save pie chart
ggsave("../../figures/Pie_1.png", pie_1, width = 6, height = 4, dpi = 300)
plot_1 <-ggplot(df_varATS, aes( x= "n = 166", y= proportion, fill = Category)) +
geom_bar(stat = "identity",  position = "stack", color = "black", size = 0.2)+
labs(y = "Proportion (%)",  fill = "varATS Result") +
geom_text(aes(label = paste0(proportion, "%", "(n=", counts, ")") ), position = position_stack(vjust = 0.5), size = 3, color = "white")+
xlab(NULL) +
theme_classic() +
# scale_fill_manual(values = c(bquote("varATS + (> 1 p/µL)") = "magenta3",
# bquote("varATS + (≤ 1 p/µL)") = "navyblue",
# bquote("varATS -") = "royalblue"))
# scale_fill_manual(values = c("varATS + (> 1 p/µL)" = "magenta3",
# expression(varATS + (<= 1~p/µL)),
# "varATS + (≤ 1 p/µL)" = "royalblue",
# "varATS -" = "navy")
scale_fill_manual(values = c( "#08519c","#2b8cbe", "#c51b8a"),
labels = c("varATS -",
"varATS + (\u2264 1 p/µL)", # Unicode for "≤"
"varATS + (> 1 p/µL)"))
plot_1
# Save the plot as a high-resolution image
ggsave("../../figures/plot_1.png", plot_1, width = 6, height = 4, dpi = 300)
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
?heading
??heading
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
library(ggrepel)
heading(2, "Figures varATS results")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
heading(2, "Figures varATS results", char = "#")
heading(1, "Figures varATS results")
heading(1, "Figures for varATS results")
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
heading(1, "CREATING FIGURES FOR MANUSCRIPT")
source("../P.falciparum_HRP2_3_project/templates/custom_headings.R")
out.file <- "Creating_molecular_result_figures.R"
heading(1, "CREATING FIGURES FOR MANUSCRIPT", out.file)
source("../P.falciparum_HRP2_3_project/templates/Custom_headings.R")
out.file <- "Creating_molecular_result_figures.R"
heading(1, "CREATING FIGURES FOR MANUSCRIPT", out.file)
rm(list = ls(all =TRUE))
source("../P.falciparum_HRP2_3_project/templates/Custom_headings.R")
out.file <- "Creating_molecular_result_figures.R"
heading(1, "CREATING FIGURES FOR MANUSCRIPT", out.file)
source("../P.falciparum_HRP2_3_project/templates/Custom_headings.R")
out.file <- "Creating_molecular_result_figures.R"
heading(1, "CREATING FIGURES FOR MANUSCRIPT", file = out.file)
git log Creating_molecular_result_figures.R
pwd
savehistory("~/Documents/IMMRSE/Hrp2:3/Scripts/P.falciparum_HRP2_3_project/Code_pie chart.Rhistory")
